name: Frontend CI

on:
  push:
    branches: [ main, staging, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, staging, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
      fail-fast: false

    defaults:
      run:
        working-directory: ./frontend

    env:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: test
      NEXT_PUBLIC_ENVIRONMENT: test
      NEXT_PUBLIC_SENTRY_DSN: ""
      NEXT_PUBLIC_GA_TRACKING_ID: ""
      NEXT_PUBLIC_FEATURE_FLAGS: '{"enableNewUI":true,"enableBetaFeatures":false}'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: |
        npm ci
        npm audit fix || true

    - name: Check for outdated dependencies
      run: npm outdated || true

    - name: Run linting
      run: |
        npm run lint -- --max-warnings 0
        npm run type-check
        npm run format:check

    - name: Run unit tests with coverage
      run: npm run test:coverage -- --testPathIgnorePatterns=integration
      env:
        CI: true
      timeout-minutes: 5
      if: always()

    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
      timeout-minutes: 5
      if: always()

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        fail_ci_if_error: true
        verbose: true

    - name: Build project
      run: npm run build
      if: matrix.node-version == '20.x'
      env:
        NODE_ENV: production
